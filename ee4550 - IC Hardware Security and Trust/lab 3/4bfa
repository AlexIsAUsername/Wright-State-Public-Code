STIL 1.0;
Header {
   Title "  TetraMAX(R)  V-2023.12-i20231127_013657 STIL output";
   Date "Thu Feb  8 19:06:36 2024";
   History {
      Ann {*     Uncollapsed Stuck Fault Summary Report *}
      Ann {* ----------------------------------------------- *}
      Ann {* fault class                     code   #faults *}
      Ann {* ------------------------------  ----  --------- *}
      Ann {* Detected                         DT         68 *}
      Ann {* Possibly detected                PT          0 *}
      Ann {* Undetectable                     UD          0 *}
      Ann {* ATPG untestable                  AU          0 *}
      Ann {* Not detected                     ND          0 *}
      Ann {* ----------------------------------------------- *}
      Ann {* total faults                                68 *}
      Ann {* test coverage                           100.00% *}
      Ann {* ----------------------------------------------- *}
      Ann {*  *}
      Ann {*            Pattern Summary Report *}
      Ann {* ----------------------------------------------- *}
      Ann {* #internal patterns                           4 *}
      Ann {*     #basic_scan patterns                     4 *}
      Ann {* ----------------------------------------------- *}
      Ann {*  *}
      Ann {* rule  severity  #fails  description *}
      Ann {* ----  --------  ------  --------------------------------- *}
      Ann {* N1    fatal          1  parsing error *}
      Ann {* N5    warning        1  redefined module *}
      Ann {*  *}
      Ann {* There are no clocks *}
      Ann {* There are no constraint ports *}
      Ann {* There are no equivalent pins *}
      Ann {* There are no net connections *}
      Ann {* top_module_name = FourBitFullAdder *}
      Ann {* Unified STIL Flow *}
      Ann {* min_n_shifts = 1 *}
      Ann {* serial_flag = 1 *}
      Ann {* PSDF = NO_PSD_FILE *}
      Ann {* PSDS = 0 *}
      Ann {* PSDA = #4#0#0/0 *}
   }
}
Signals {
   "A(4)" In; "A(3)" In; "A(2)" In; "A(1)" In; "B(4)" In; "B(3)" In; "B(2)" In; "B(1)" In;
   "Cin" In; "Cout" Out; "S(4)" Out; "S(3)" Out; "S(2)" Out; "S(1)" Out;
}
SignalGroups {
   "_default_In_Timing_" = '"A(4)" + "A(3)" + "A(2)" + "A(1)" + "B(4)" + "B(3)" + "B(2)"
   + "B(1)" + "Cin"'; // #signals=9
   "_pi" = '"A(4)" + "A(3)" + "A(2)" + "A(1)" + "B(4)" + "B(3)" + "B(2)" + "B(1)"
   + "Cin"'; // #signals=9
   "_in" = '"A(4)" + "A(3)" + "A(2)" + "A(1)" + "B(4)" + "B(3)" + "B(2)" + "B(1)"
   + "Cin"'; // #signals=9
   "_default_Out_Timing_" = '"Cout" + "S(4)" + "S(3)" + "S(2)" + "S(1)"'; // #signals=5
   "_po" = '"Cout" + "S(4)" + "S(3)" + "S(2)" + "S(1)"'; // #signals=5
   "_out" = '"Cout" + "S(4)" + "S(3)" + "S(2)" + "S(1)"'; // #signals=5
}
Timing {
   WaveformTable "_default_WFT_" {
      Period '100ns';
      Waveforms {
         "_default_In_Timing_" { 0 { '0ns' D; } }
         "_default_In_Timing_" { 1 { '0ns' U; } }
         "_default_In_Timing_" { Z { '0ns' Z; } }
         "_default_In_Timing_" { N { '0ns' N; } }
         "_default_Out_Timing_" { X { '0ns' X; } }
         "_default_Out_Timing_" { H { '0ns' X; '40ns' H; } }
         "_default_Out_Timing_" { T { '0ns' X; '40ns' T; } }
         "_default_Out_Timing_" { L { '0ns' X; '40ns' L; } }
      }
   }
}
UserKeywords ScanChainGroups;
ScanStructures {
   // Uncomment and modify the following to suit your design
   // ScanChain "chain_name" { ScanIn "chain_input_name"; ScanOut "chain_output_name"; }
}
PatternBurst "_burst_" {
   PatList { "_pattern_" {
   }
}}
PatternExec {
   PatternBurst "_burst_";
}
UserKeywords ActiveScanChains;
Procedures {
   "capture" {
      W "_default_WFT_";
      C { "_po"=XXXXX; }
      "forcePI": V { "_pi"=\r9 # ; }
      "measurePO": V { "_po"=#####; }
   }
   // Uncomment and modify the following to suit your design
   // load_unload {
      // V { } // force clocks off and scan enable pins active
      // Shift { V { _si=#; _so=#; }} // pulse shift clocks
   // }
}
MacroDefs {
}
Pattern "_pattern_" {
   W "_default_WFT_";
   "precondition all Signals": C { "_pi"=\r9 0 ; "_po"=XXXXX; }
   "pattern 0": Call "capture" { 
      "_pi"=111101111; "_po"=HLHHH; }
   "pattern 1": Call "capture" { 
      "_pi"=000011110; "_po"=LHHHH; }
   "pattern 2": Call "capture" { 
      "_pi"=000010001; "_po"=LHLLH; }
   "pattern 3": Call "capture" { 
      "_pi"=111011000; "_po"=HHLHL; }
}

// Patterns reference 8 V statements, generating 8 test cycles
